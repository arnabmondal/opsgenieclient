/*
 * OpsGenie REST API
 * OpsGenie API Description
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ifountain.opsgenie.client.swagger.api;

import com.ifountain.opsgenie.client.swagger.ApiException;
import com.ifountain.opsgenie.client.swagger.api.model.*;
import org.junit.Ignore;
import org.junit.Test;

import java.util.List;

/**
 * API tests for AlertApi
 */
@Ignore
public class AlertApiTest {

    private final AlertApi api = new AlertApi();


    /**
     * Acknowledge Alert
     * <p>
     * Acknowledges alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acknowledgeAlertTest() throws ApiException {
        String identifier = null;
        String identifierType = null;
        AlertActionPayload body = null;
        SuccessResponse response = api.acknowledgeAlert(identifier, identifierType, body);

        // TODO: test validations
    }

    /**
     * Add Alert Details
     * <p>
     * Add details to the alert
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addDetailsTest() throws ApiException {
        String identifier = null;
        CreateAlertDetailsPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.addDetails(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Add Alert Note
     * <p>
     * Adds note to alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNoteTest() throws ApiException {
        String identifier = null;
        AddAlertNotePayload body = null;
        String identifierType = null;
        SuccessResponse response = api.addNote(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Add Alert Recipient
     * <p>
     * Add recipient to alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRecipientTest() throws ApiException {
        String identifier = null;
        AddAlertRecipientPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.addRecipient(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Add Alert Tags
     * <p>
     * Add tags to the alert
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTagsTest() throws ApiException {
        String identifier = null;
        CreateAlertTagsPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.addTags(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Assign Alert
     * <p>
     * Assign alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignAlertTest() throws ApiException {
        String identifier = null;
        AssignAlertPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.assignAlert(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Close Alert
     * <p>
     * Closes alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void closeAlertTest() throws ApiException {
        String identifier = null;
        String identifierType = null;
        AlertActionPayload body = null;
        SuccessResponse response = api.closeAlert(identifier, identifierType, body);

        // TODO: test validations
    }

    /**
     * Create Alert
     * <p>
     * Creates a new alert
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAlertTest() throws ApiException {
        CreateAlertPayload body = null;
        SuccessResponse response = api.createAlert(body);

        // TODO: test validations
    }

    /**
     * Delete Alert
     * <p>
     * Deletes an alert using alert id, tiny id or alias
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAlertTest() throws ApiException {
        String identifier = null;
        String identifierType = null;
        String source = null;
        String user = null;
        SuccessResponse response = api.deleteAlert(identifier, identifierType, source, user);

        // TODO: test validations
    }

    /**
     * Delete Alert Details
     * <p>
     * Delete the details of an alert using alert id, tiny id or alias
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDetailsTest() throws ApiException {
        String identifier = null;
        List<String> keys = null;
        String identifierType = null;
        String user = null;
        String note = null;
        String source = null;
        SuccessResponse response = api.deleteDetails(identifier, keys, identifierType, user, note, source);

        // TODO: test validations
    }

    /**
     * Delete Alert Tags
     * <p>
     * Delete tags of the alert
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTagsTest() throws ApiException {
        String identifier = null;
        List<String> tags = null;
        String identifierType = null;
        String user = null;
        String note = null;
        String source = null;
        SuccessResponse response = api.deleteTags(identifier, tags, identifierType, user, note, source);

        // TODO: test validations
    }

    /**
     * Escalate Alert
     * <p>
     * Escalate alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void escalateAlertTest() throws ApiException {
        String identifier = null;
        EscalateAlertToNextPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.escalateAlert(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Custom Alert Action
     * <p>
     * Custom actions for the alert
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeCustomActionTest() throws ApiException {
        String identifier = null;
        CustomActionPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.executeCustomAction(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Get Alert
     * <p>
     * Returns alert with given id, tiny id or alias
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlertTest() throws ApiException {
        String identifier = null;
        String identifierType = null;
        DetailedAlertDto response = api.getAlert(identifier, identifierType);

        // TODO: test validations
    }

    /**
     * List alerts
     * <p>
     * Returns list of alerts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAlertsTest() throws ApiException {
        String pageField = null;
        String pageValue = null;
        String pageDirection = null;
        Integer limit = null;
        String sortField = null;
        String order = null;
        String status = null;
        Boolean acked = null;
        Boolean seen = null;
        List<String> teamIds = null;
        String teamIdsRelation = null;
        List<String> teamNames = null;
        String teamNamesRelation = null;
        List<String> tags = null;
        String tagsRelation = null;
        ListAlertResponse response = api.listAlerts(pageField, pageValue, pageDirection, limit, sortField, order, status, acked, seen, teamIds, teamIdsRelation, teamNames, teamNamesRelation, tags, tagsRelation);

        // TODO: test validations
    }

    /**
     * Snooze Alert
     * <p>
     * Snooze alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void snoozeAlertTest() throws ApiException {
        String identifier = null;
        SnoozeAlertPayload body = null;
        String identifierType = null;
        SuccessResponse response = api.snoozeAlert(identifier, body, identifierType);

        // TODO: test validations
    }

    /**
     * Unacknowledge Alert
     * <p>
     * Unacknowledge alert with given identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unacknowledgeAlertTest() throws ApiException {
        String identifier = null;
        String identifierType = null;
        AlertActionPayload body = null;
        SuccessResponse response = api.unacknowledgeAlert(identifier, identifierType, body);

        // TODO: test validations
    }

}
